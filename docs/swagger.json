{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API сервиса доступно бесплатно и без ограничений на кол-во запросов в день/месяц. Единственный лимит - 10 запросов в секунду с одного IP адреса.",
    "title": "LEAQ API",
    "contact": {
      "name": "Поддержка",
      "url": "https://vk.me/leaq_ru"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/v1/billing/createInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "operationId": "Billing_CreateInvoice",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/billingCreateInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingCreateInvoiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/billing/getMyBalance": {
      "get": {
        "tags": [
          "Billing"
        ],
        "operationId": "Billing_GetMyBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingGetMyBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/billing/getMyDataPlan": {
      "post": {
        "tags": [
          "Billing"
        ],
        "operationId": "Billing_GetMyDataPlan",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingGetMyDataPlanResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/billing/getMyInvoices": {
      "get": {
        "tags": [
          "Billing"
        ],
        "operationId": "Billing_GetMyInvoices",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "opts.skip",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "20 default",
            "name": "opts.limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/billingGetMyInvoicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/billing/renewCompanyPremium": {
      "post": {
        "tags": [
          "Billing"
        ],
        "operationId": "Billing_RenewCompanyPremium",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/billingRenewCompanyPremiumRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/billing/renewDataPremium": {
      "post": {
        "tags": [
          "Billing"
        ],
        "operationId": "Billing_RenewDataPremium",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/billingRenewDataPremiumRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/billing/robokassaWebhook/{secret}": {
      "get": {
        "tags": [
          "Billing"
        ],
        "operationId": "Billing_RobokassaWebhook",
        "parameters": [
          {
            "type": "string",
            "name": "secret",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "InvId",
            "in": "query"
          },
          {
            "type": "number",
            "format": "float",
            "description": "e.g. 101.66.",
            "name": "OutSum",
            "in": "query"
          },
          {
            "type": "string",
            "name": "SignatureValue",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/category/getAll": {
      "get": {
        "tags": [
          "Category"
        ],
        "operationId": "Category_GetAll",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/categoryCategoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/category/getById": {
      "get": {
        "tags": [
          "Category"
        ],
        "operationId": "Category_GetById",
        "parameters": [
          {
            "type": "string",
            "name": "categoryId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/categoryCategoryItem"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/category/getByIds": {
      "get": {
        "tags": [
          "Category"
        ],
        "operationId": "Category_GetByIds",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "categoryIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/categoryCategoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/category/getBySlug": {
      "get": {
        "tags": [
          "Category"
        ],
        "operationId": "Category_GetBySlug",
        "parameters": [
          {
            "type": "string",
            "name": "slug",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/categoryCategoryItem"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/category/getHints": {
      "get": {
        "tags": [
          "Category"
        ],
        "operationId": "Category_GetHints",
        "parameters": [
          {
            "type": "string",
            "name": "title",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "20 default",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/categoryCategoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/city/getAll": {
      "get": {
        "tags": [
          "City"
        ],
        "operationId": "City_GetAll",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cityCitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/city/getById": {
      "get": {
        "tags": [
          "City"
        ],
        "operationId": "City_GetById",
        "parameters": [
          {
            "type": "string",
            "name": "cityId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cityCityItem"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/city/getByIds": {
      "get": {
        "tags": [
          "City"
        ],
        "operationId": "City_GetByIds",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "cityIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cityCitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/city/getBySlug": {
      "get": {
        "tags": [
          "City"
        ],
        "operationId": "City_GetBySlug",
        "parameters": [
          {
            "type": "string",
            "name": "slug",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cityCityItem"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/city/getHints": {
      "get": {
        "tags": [
          "City"
        ],
        "operationId": "City_GetHints",
        "parameters": [
          {
            "type": "string",
            "name": "title",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "20 default",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cityCitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/company/edit": {
      "patch": {
        "tags": [
          "Company"
        ],
        "summary": "edit companies where current user is owner or admin",
        "operationId": "Company_Edit",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/parserEditRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/company/get": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "DEPRECATED",
        "operationId": "Company_Get",
        "parameters": [
          {
            "type": "string",
            "description": "Pagination (skip)",
            "name": "opts.fromId",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "20 default",
            "name": "opts.limit",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "cityIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "categoryIds",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasEmail",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasPhone",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasOnline",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasInn",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasKpp",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasOgrn",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasAppStore",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasGooglePlay",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasVk",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "vkMembersCount.from",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "vkMembersCount.to",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasInstagram",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasTwitter",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasYoutube",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasFacebook",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "excludeIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "technologyIds",
            "in": "query"
          },
          {
            "enum": [
              "ONE_OF",
              "ALL"
            ],
            "type": "string",
            "default": "ONE_OF",
            "name": "technologyFindRule",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserGetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/company/getBySlug": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "DEPRECATED",
        "operationId": "Company_GetBySlug",
        "parameters": [
          {
            "type": "string",
            "name": "slug",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserFullCompany"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/company/getBySlugs": {
      "get": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_GetBySlugs",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "opts.skip",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "20 default",
            "name": "opts.limit",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "opts.excludeIds",
            "in": "query"
          },
          {
            "type": "string",
            "name": "citySlug",
            "in": "query"
          },
          {
            "type": "string",
            "name": "categorySlug",
            "in": "query"
          },
          {
            "type": "string",
            "name": "technologySlug",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserShortCompanies"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/company/getEmailList": {
      "get": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_GetEmailList",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "cityIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "categoryIds",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasEmail",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasPhone",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasOnline",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasInn",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasKpp",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasOgrn",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasAppStore",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasGooglePlay",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasVk",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "vkMembersCount.from",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "vkMembersCount.to",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasInstagram",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasTwitter",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasYoutube",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasFacebook",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "technologyIds",
            "in": "query"
          },
          {
            "enum": [
              "ONE_OF",
              "ALL"
            ],
            "type": "string",
            "default": "ONE_OF",
            "name": "technologyFindRule",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserGetListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/company/getMy": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "get companies where current user is owner or admin",
        "operationId": "Company_GetMy",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "opts.skip",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "20 default",
            "name": "opts.limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserGetMyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/company/getPhoneList": {
      "get": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_GetPhoneList",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "cityIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "categoryIds",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasEmail",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasPhone",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasOnline",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasInn",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasKpp",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasOgrn",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasAppStore",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasGooglePlay",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasVk",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "vkMembersCount.from",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "vkMembersCount.to",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasInstagram",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasTwitter",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasYoutube",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasFacebook",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "technologyIds",
            "in": "query"
          },
          {
            "enum": [
              "ONE_OF",
              "ALL"
            ],
            "type": "string",
            "default": "ONE_OF",
            "name": "technologyFindRule",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserGetListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/company/getRelated": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "DEPRECATED: to get related companies use /v{latest}/company/get with cityIds, categoryIds and excludeIds",
        "operationId": "Company_GetRelated",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "5 default",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "name": "cityId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "categoryId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserGetRelatedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/company/getTotalCount": {
      "get": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_GetTotalCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserGetTotalCountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/exporter/exportCompanies": {
      "get": {
        "tags": [
          "Exporter"
        ],
        "summary": "returns only first 1000 results even on data-premium plan",
        "operationId": "Exporter_ExportCompanies",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "cityIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "categoryIds",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasEmail",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasPhone",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasOnline",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasInn",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasKpp",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasOgrn",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasAppStore",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasGooglePlay",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasVk",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "vkMembersCount.from",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "vkMembersCount.to",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasInstagram",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasTwitter",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasYoutube",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasFacebook",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "technologyIds",
            "in": "query"
          },
          {
            "enum": [
              "ONE_OF",
              "ALL"
            ],
            "type": "string",
            "default": "ONE_OF",
            "name": "technologyFindRule",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exporterExportCompaniesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/exporter/exportCompaniesAsync": {
      "get": {
        "tags": [
          "Exporter"
        ],
        "summary": "available only on data-premium plan and full result returns in getMyFiles response",
        "operationId": "Exporter_ExportCompaniesAsync",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "cityIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "categoryIds",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasEmail",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasPhone",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasOnline",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasInn",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasKpp",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasOgrn",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasAppStore",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasGooglePlay",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasVk",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "vkMembersCount.from",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "vkMembersCount.to",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasInstagram",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasTwitter",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasYoutube",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasFacebook",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "technologyIds",
            "in": "query"
          },
          {
            "enum": [
              "ONE_OF",
              "ALL"
            ],
            "type": "string",
            "default": "ONE_OF",
            "name": "technologyFindRule",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/exporter/getMyFiles": {
      "get": {
        "tags": [
          "Exporter"
        ],
        "operationId": "Exporter_GetMyFiles",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "opts.skip",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "20 default",
            "name": "opts.limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/exporterGetMyFilesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/post/get": {
      "get": {
        "tags": [
          "Post"
        ],
        "operationId": "Post_GetPosts",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "opts.skip",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "20 default",
            "name": "opts.limit",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "opts.excludeIds",
            "in": "query"
          },
          {
            "type": "string",
            "name": "companyId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserGetPostsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/role/addCompanyAdmin": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "only owner can set admins (up to 50)",
        "operationId": "Role_AddCompanyAdmin",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userAddCompanyAdminRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/role/applyCompanyOwner": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "create request to apply current user as company owner. company can have only one owner",
        "operationId": "Role_ApplyCompanyOwner",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userApplyCompanyOwnerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userApplyCompanyOwnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/role/getManagers": {
      "get": {
        "tags": [
          "Role"
        ],
        "operationId": "Role_GetManagers",
        "parameters": [
          {
            "type": "string",
            "name": "companyId",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "opts.skip",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "20 default",
            "name": "opts.limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userGetManagersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/role/removeCompanyAdmin": {
      "delete": {
        "tags": [
          "Role"
        ],
        "operationId": "Role_RemoveCompanyAdmin",
        "parameters": [
          {
            "type": "string",
            "name": "companyId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "userId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/role/setCompanyOwner": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "company owner can move self owner-role to another user. this action is irreversible",
        "operationId": "Role_SetCompanyOwner",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userSetCompanyOwnerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/role/verifyCompanyOwner": {
      "post": {
        "tags": [
          "Role"
        ],
        "operationId": "Role_VerifyCompanyOwner",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userVerifyCompanyOwnerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/technology/getBySlug": {
      "get": {
        "tags": [
          "Technology"
        ],
        "operationId": "Technology_GetBySlug",
        "parameters": [
          {
            "type": "string",
            "name": "slug",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/technologyGetBySlugResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/technology/getHints": {
      "get": {
        "tags": [
          "Technology"
        ],
        "operationId": "Technology_GetHints",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "excludeIds",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "20 default",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/technologyGetHintsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v1/user/vkAuth": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "https://vk.com/dev/Auth",
        "operationId": "User_VkAuth",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userVkAuthRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userSelfUser"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v2/company/get": {
      "get": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_GetV2",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "opts.skip",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "20 default",
            "name": "opts.limit",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "opts.excludeIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "cityIds",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "categoryIds",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasEmail",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasPhone",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasOnline",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasInn",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasKpp",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasOgrn",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasAppStore",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasGooglePlay",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasVk",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "vkMembersCount.from",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "vkMembersCount.to",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasInstagram",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasTwitter",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasYoutube",
            "in": "query"
          },
          {
            "enum": [
              "ANY",
              "YES",
              "NO"
            ],
            "type": "string",
            "default": "ANY",
            "name": "hasFacebook",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "technologyIds",
            "in": "query"
          },
          {
            "enum": [
              "ONE_OF",
              "ALL"
            ],
            "type": "string",
            "default": "ONE_OF",
            "name": "technologyFindRule",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "name": "companyIds",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserShortCompanies"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/v2/company/getBySlug": {
      "get": {
        "tags": [
          "Company"
        ],
        "operationId": "Company_GetBySlugV2",
        "parameters": [
          {
            "type": "string",
            "name": "slug",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/parserGetBySlugResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "billingCreateInvoiceRequest": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64",
          "title": "russian penny"
        }
      }
    },
    "billingCreateInvoiceResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "billingCreditCompanyPremium": {
      "type": "object",
      "properties": {
        "companyId": {
          "type": "string"
        },
        "companySlug": {
          "type": "string"
        },
        "monthAmount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "billingCreditDataPremium": {
      "type": "object",
      "properties": {
        "monthAmount": {
          "type": "integer",
          "format": "int64"
        },
        "userFirstName": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "userLastName": {
          "type": "string"
        }
      }
    },
    "billingDebitRobokassa": {
      "type": "object",
      "properties": {
        "invoiceId": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "billingGetMyBalanceResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "billingGetMyDataPlanResponse": {
      "type": "object",
      "properties": {
        "premium": {
          "type": "boolean",
          "format": "boolean"
        },
        "premiumDeadline": {
          "type": "string"
        }
      }
    },
    "billingGetMyInvoicesResponse": {
      "type": "object",
      "properties": {
        "invoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/billingInvoiceItem"
          }
        }
      }
    },
    "billingInvoiceItem": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "createdAt": {
          "type": "string"
        },
        "creditCompanyPremium": {
          "$ref": "#/definitions/billingCreditCompanyPremium"
        },
        "creditDataPremium": {
          "$ref": "#/definitions/billingCreditDataPremium"
        },
        "debitRobokassa": {
          "$ref": "#/definitions/billingDebitRobokassa"
        },
        "id": {
          "type": "string"
        },
        "kind": {
          "$ref": "#/definitions/billingKind"
        },
        "status": {
          "$ref": "#/definitions/billingStatus"
        }
      }
    },
    "billingKind": {
      "type": "string",
      "default": "KIND_NONE",
      "enum": [
        "KIND_NONE",
        "DEBIT_ROBOKASSA",
        "CREDIT_COMPANY_PREMIUM",
        "DEBIT_MANUAL",
        "CREDIT_DATA_PREMIUM"
      ]
    },
    "billingRenewCompanyPremiumRequest": {
      "type": "object",
      "properties": {
        "companyId": {
          "type": "string"
        },
        "monthAmount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "billingRenewDataPremiumRequest": {
      "type": "object",
      "properties": {
        "monthAmount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "billingStatus": {
      "type": "string",
      "default": "STATUS_NONE",
      "enum": [
        "STATUS_NONE",
        "PENDING",
        "SUCCESS"
      ]
    },
    "categoryCategoriesResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/categoryCategoryItem"
          }
        }
      }
    },
    "categoryCategoryItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "cityCitiesResponse": {
      "type": "object",
      "properties": {
        "cities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cityCityItem"
          }
        }
      }
    },
    "cityCityItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "exporterExportCompaniesResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "exporterFile": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "exporterGetMyFilesResponse": {
      "type": "object",
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/exporterFile"
          }
        }
      }
    },
    "parserApp": {
      "type": "object",
      "properties": {
        "appStore": {
          "$ref": "#/definitions/parserUrlItem"
        },
        "googlePlay": {
          "$ref": "#/definitions/parserUrlItem"
        }
      }
    },
    "parserDomain": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "registrar": {
          "type": "string"
        },
        "registrationDate": {
          "type": "string"
        }
      }
    },
    "parserEditRequest": {
      "type": "object",
      "properties": {
        "addressHouse": {
          "type": "string"
        },
        "addressStreet": {
          "type": "string"
        },
        "appStoreUrl": {
          "type": "string"
        },
        "avatarBase64": {
          "type": "string"
        },
        "categoryId": {
          "type": "string"
        },
        "cityId": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "facebookUrl": {
          "type": "string"
        },
        "googlePlayUrl": {
          "type": "string"
        },
        "inn": {
          "type": "number",
          "format": "double"
        },
        "instagramUrl": {
          "type": "string"
        },
        "kpp": {
          "type": "number",
          "format": "double"
        },
        "ogrn": {
          "type": "number",
          "format": "double"
        },
        "phone": {
          "type": "number",
          "format": "double"
        },
        "title": {
          "type": "string"
        },
        "twitterUrl": {
          "type": "string"
        },
        "vkUrl": {
          "type": "string"
        },
        "youtubeUrl": {
          "type": "string"
        }
      }
    },
    "parserFullCompany": {
      "type": "object",
      "properties": {
        "app": {
          "$ref": "#/definitions/parserApp"
        },
        "avatar": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/categoryCategoryItem"
        },
        "description": {
          "type": "string"
        },
        "domain": {
          "$ref": "#/definitions/parserDomain"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inn": {
          "type": "number",
          "format": "double"
        },
        "kpp": {
          "type": "number",
          "format": "double"
        },
        "location": {
          "$ref": "#/definitions/parserFullLocation"
        },
        "ogrn": {
          "type": "number",
          "format": "double"
        },
        "online": {
          "type": "boolean",
          "format": "boolean"
        },
        "people": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserPeople"
          }
        },
        "phone": {
          "type": "number",
          "format": "double"
        },
        "slug": {
          "type": "string"
        },
        "social": {
          "$ref": "#/definitions/parserSocial"
        },
        "title": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "parserFullLocation": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "addressTitle": {
          "type": "string"
        },
        "city": {
          "$ref": "#/definitions/cityCityItem"
        }
      }
    },
    "parserGetBySlugResponse": {
      "type": "object",
      "properties": {
        "fullCompany": {
          "$ref": "#/definitions/parserFullCompany"
        },
        "pageSpeed": {
          "type": "integer",
          "format": "int64",
          "title": "milliseconds"
        },
        "posts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserPostItem"
          }
        },
        "premium": {
          "type": "boolean",
          "format": "boolean"
        },
        "related": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserShortCompany"
          }
        },
        "technologyCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserTechnologyCategory"
          }
        },
        "verified": {
          "type": "boolean",
          "format": "boolean",
          "title": "company has owner"
        }
      }
    },
    "parserGetListResponse": {
      "type": "object",
      "properties": {
        "downloadUrl": {
          "type": "string"
        }
      }
    },
    "parserGetMyResponse": {
      "type": "object",
      "properties": {
        "companies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserMyCompany"
          }
        }
      }
    },
    "parserGetPostsResponse": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserPostItem"
          }
        }
      }
    },
    "parserGetRelatedResponse": {
      "type": "object",
      "properties": {
        "companies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserFullCompany"
          }
        }
      }
    },
    "parserGetResponse": {
      "type": "object",
      "properties": {
        "companies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserFullCompany"
          }
        }
      }
    },
    "parserGetTotalCountResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "parserIsClosed": {
      "type": "string",
      "default": "OPEN",
      "enum": [
        "OPEN",
        "CLOSE",
        "PRIVATE"
      ]
    },
    "parserMyCompany": {
      "type": "object",
      "properties": {
        "app": {
          "$ref": "#/definitions/parserApp"
        },
        "avatar": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/categoryCategoryItem"
        },
        "city": {
          "$ref": "#/definitions/cityCityItem"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "phone": {
          "type": "number",
          "format": "double"
        },
        "premium": {
          "type": "boolean",
          "format": "boolean"
        },
        "premiumDeadline": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "social": {
          "$ref": "#/definitions/parserShortSocial"
        },
        "title": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "verified": {
          "type": "boolean",
          "format": "boolean",
          "title": "company has owner"
        }
      }
    },
    "parserPeople": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "type": "number",
          "format": "double"
        },
        "photo200": {
          "type": "string"
        },
        "sex": {
          "$ref": "#/definitions/parserSex"
        },
        "vkId": {
          "type": "number",
          "format": "double"
        },
        "vkIsClosed": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "parserPhotoItem": {
      "type": "object",
      "properties": {
        "urlM": {
          "type": "string"
        },
        "urlR": {
          "type": "string"
        }
      }
    },
    "parserPostItem": {
      "type": "object",
      "properties": {
        "companyId": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserPhotoItem"
          }
        },
        "text": {
          "type": "string"
        }
      }
    },
    "parserSex": {
      "type": "string",
      "default": "NONE",
      "enum": [
        "NONE",
        "FEMALE",
        "MALE"
      ]
    },
    "parserShortCompanies": {
      "type": "object",
      "properties": {
        "companies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserShortCompany"
          }
        }
      }
    },
    "parserShortCompany": {
      "type": "object",
      "properties": {
        "app": {
          "$ref": "#/definitions/parserApp"
        },
        "avatar": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/categoryCategoryItem"
        },
        "city": {
          "$ref": "#/definitions/cityCityItem"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "phone": {
          "type": "number",
          "format": "double"
        },
        "premium": {
          "type": "boolean",
          "format": "boolean"
        },
        "slug": {
          "type": "string"
        },
        "social": {
          "$ref": "#/definitions/parserShortSocial"
        },
        "title": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "verified": {
          "type": "boolean",
          "format": "boolean",
          "title": "company has owner"
        }
      }
    },
    "parserShortSocial": {
      "type": "object",
      "properties": {
        "facebook": {
          "$ref": "#/definitions/parserUrlItem"
        },
        "instagram": {
          "$ref": "#/definitions/parserUrlItem"
        },
        "twitter": {
          "$ref": "#/definitions/parserUrlItem"
        },
        "vk": {
          "$ref": "#/definitions/parserShortVk"
        },
        "youtube": {
          "$ref": "#/definitions/parserUrlItem"
        }
      }
    },
    "parserShortVk": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "number",
          "format": "double"
        },
        "membersCount": {
          "type": "number",
          "format": "double"
        },
        "screenName": {
          "type": "string"
        }
      }
    },
    "parserSocial": {
      "type": "object",
      "properties": {
        "facebook": {
          "$ref": "#/definitions/parserUrlItem"
        },
        "instagram": {
          "$ref": "#/definitions/parserUrlItem"
        },
        "twitter": {
          "$ref": "#/definitions/parserUrlItem"
        },
        "vk": {
          "$ref": "#/definitions/parserVk"
        },
        "youtube": {
          "$ref": "#/definitions/parserUrlItem"
        }
      }
    },
    "parserTechnologyCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "technologies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/parserTechnologyItem"
          }
        }
      }
    },
    "parserTechnologyItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "parserUrlItem": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "parserVk": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "groupId": {
          "type": "number",
          "format": "double"
        },
        "isClosed": {
          "$ref": "#/definitions/parserIsClosed"
        },
        "membersCount": {
          "type": "number",
          "format": "double"
        },
        "name": {
          "type": "string"
        },
        "photo200": {
          "type": "string"
        },
        "screenName": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
      "type": "object",
      "properties": {
        "typeUrl": {
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics.",
          "type": "string"
        },
        "value": {
          "description": "Must be a valid serialized protocol buffer of the above specified type.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        },
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "technologyCategoryItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "technologyGetBySlugResponse": {
      "type": "object",
      "properties": {
        "technology": {
          "$ref": "#/definitions/technologyTechnologyItem"
        }
      }
    },
    "technologyGetHintsResponse": {
      "type": "object",
      "properties": {
        "technologies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/technologyHintTechnologyItem"
          }
        }
      }
    },
    "technologyHintTechnologyItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "technologyTechnologyItem": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/technologyCategoryItem"
          }
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "userAddCompanyAdminRequest": {
      "type": "object",
      "properties": {
        "companyId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "userApplyCompanyOwnerRequest": {
      "type": "object",
      "title": "example.com",
      "properties": {
        "companyUrl": {
          "type": "string"
        }
      }
    },
    "userApplyCompanyOwnerResponse": {
      "type": "object",
      "properties": {
        "metaContent": {
          "type": "string"
        },
        "metaName": {
          "type": "string"
        }
      }
    },
    "userGetManagersResponse": {
      "type": "object",
      "properties": {
        "managers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/userManagerItem"
          }
        }
      }
    },
    "userGrant": {
      "type": "string",
      "default": "NONE",
      "enum": [
        "NONE",
        "OWNER",
        "ADMIN"
      ]
    },
    "userManagerItem": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "grant": {
          "$ref": "#/definitions/userGrant"
        },
        "id": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "photo": {
          "type": "string"
        }
      }
    },
    "userSelfUser": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "photo": {
          "type": "string"
        },
        "photoRec": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "vkId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "userSetCompanyOwnerRequest": {
      "type": "object",
      "properties": {
        "companyId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "userVerifyCompanyOwnerRequest": {
      "type": "object",
      "title": "example.com",
      "properties": {
        "companyUrl": {
          "type": "string"
        }
      }
    },
    "userVkAuthRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "description": "Paste 'Bearer XXXXX', not 'XXXXX'",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ]
}